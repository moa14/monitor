name: Uptime check (log only downtime)

permissions:
  contents: write

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch: {}

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Ensure tools
        run: sudo apt-get update && sudo apt-get install -y curl

      - name: Check URL & append downtime
        env:
          TARGET_URL: "http://waaxool.com/"
        run: |
          set -e
          mkdir -p data
          FILE=data/downtime.csv
          STATUS_FILE=data/last_status.txt

          if [ ! -f "$FILE" ]; then
            echo "timestamp_utc,status_code,response_time_ms,reason" > "$FILE"
          fi

          TS=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          START=$(date +%s%3N)
          HTTP_CODE=$(curl -s -o /dev/null --max-time 20 -w "%{http_code}" "$TARGET_URL" || echo "000")
          END=$(date +%s%3N)
          RT=$((END-START))

          DOWN=0
          REASON=""
          if [ "$HTTP_CODE" = "000" ]; then
            DOWN=1
            REASON="timeout_or_network_error"
          elif [ "$HTTP_CODE" -ge 200 ] && [ "$HTTP_CODE" -lt 400 ]; then
            DOWN=0
          else
            DOWN=1
            REASON="http_${HTTP_CODE}"
          fi

          if [ "$DOWN" -eq 1 ]; then
            echo "$TS,$HTTP_CODE,$RT,$REASON" >> "$FILE"
            echo "down" > "$STATUS_FILE"
          else
            echo "up" > "$STATUS_FILE"
          fi

      - name: Commit & push if changed
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add data/downtime.csv data/last_status.txt || true
            git commit -m "Update downtime log [skip ci]"
            git push
          else
            echo "No changes to commit"
          fi